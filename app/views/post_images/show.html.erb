<div class="post-body">
  <%= attachment_image_tag @post_image, :image %>
  <p>ショップ名：<%= @post_image.shop_name %></p>
  <p>説明：<%= @post_image.caption %></p>
  <p>ユーザーネーム：<%= @post_image.user.name %></p>
  <p>投稿日時：<%= @post_image.created_at.strftime('%Y/%m/%d') %></p>
  <!--strftimeメソッド('%Y/%m/%d')、 '%Y/%m/%d'の記述で、年/月/日のフォーマットへ変換-->
  <% if @post_image.user == current_user %>
    <%= link_to "削除", post_image_path(@post_image), method: :delete %>
  <% end %>
  <!--もし、投稿者 == 現在ログインしているユーザ だったら-->
    <!--削除ボタン-->
  <!--終わり-->
</div>

<div class="comments">
<p>コメント件数：<%= @post_image.post_comments.count %></p>
<% @post_image.post_comments.each do |post_comment| %>
  <p><%= image_tag('sample-author1.jpg') %></p>
  <%= post_comment.user.name %>
  <%= post_comment.created_at.strftime('%Y/%m/%d') %><%= post_comment.comment %>
  <!--削除を表示-->
  <% if post_comment.user == current_user %>
  <div class="comment-delete">
    <%= link_to "削除", post_image_post_comment_path(post_comment.post_image, post_comment), method: :delete %>
  </div>
  <% end %>
<% end %>
  <!--favorite機能-->
  <% if @post_image.favorited_by?(current_user) %>
  <!--showアクションの変数が入ってくる、対応しているアクションの中身の変数しか使えない-->
  <!--アクション名とビューファイルは名前一致のものしか通信できない-->
  <!--モデル内で定義した自作のメソッドをここで使用-->
  <!--投稿画像に付けられた「いいね」に、自分（ログインしているユーザ）が含まれているか判定-->
    <p>
      <%= link_to post_image_favorites_path(@post_image), method: :delete do %>
        ♥<%= @post_image.favorites.count %> いいね
      <% end %>
      <!--deleteする時のview画面は♥なので、このように記載している。-->
    </p>
    <% else %>
    <p>
      <%= link_to post_image_favorites_path(@post_image), method: :post do %>
        ♡<%= @post_image.favorites.count %> いいね
      <% end %>
    </p>
  <% end %>
  
</div>
<div class="new-comment">
<%= form_with(model:[@post_image, @post_comment], local: true) do |f| %>
<!--配列でインスタンス変数を2つ指定、コメントは、post_imageに結びついた-->
<!--post_commentにあるため、2つ用意が必要-->
  <%= f.text_area :comment, rows:'5',placeholder: "コメントをここに" %>
  <%= f.submit "送信する" %>
<% end %>
</div>